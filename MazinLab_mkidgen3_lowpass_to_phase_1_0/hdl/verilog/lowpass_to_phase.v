// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lowpass_to_phase,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.477937,HLS_SYN_LAT=21,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=6163,HLS_SYN_LUT=13631,HLS_VERSION=2019_2_1}" *)

module lowpass_to_phase (
        ap_clk,
        ap_rst_n,
        instream_TDATA,
        instream_TVALID,
        instream_TREADY,
        instream_TUSER,
        instream_TLAST,
        phase_0_TDATA,
        phase_0_TVALID,
        phase_0_TREADY,
        phase_1_TDATA,
        phase_1_TVALID,
        phase_1_TREADY,
        phase_2_TDATA,
        phase_2_TVALID,
        phase_2_TREADY,
        phase_3_TDATA,
        phase_3_TVALID,
        phase_3_TREADY,
        phase_0_TUSER,
        phase_1_TUSER,
        phase_2_TUSER,
        phase_3_TUSER,
        phase_0_TLAST,
        phase_1_TLAST,
        phase_2_TLAST,
        phase_3_TLAST,
        phases_TDATA,
        phases_TVALID,
        phases_TREADY,
        phases_TUSER,
        phases_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [255:0] instream_TDATA;
input   instream_TVALID;
output   instream_TREADY;
input  [7:0] instream_TUSER;
input   instream_TLAST;
output  [15:0] phase_0_TDATA;
output   phase_0_TVALID;
input   phase_0_TREADY;
output  [15:0] phase_1_TDATA;
output   phase_1_TVALID;
input   phase_1_TREADY;
output  [15:0] phase_2_TDATA;
output   phase_2_TVALID;
input   phase_2_TREADY;
output  [15:0] phase_3_TDATA;
output   phase_3_TVALID;
input   phase_3_TREADY;
output  [8:0] phase_0_TUSER;
output  [8:0] phase_1_TUSER;
output  [8:0] phase_2_TUSER;
output  [8:0] phase_3_TUSER;
output   phase_0_TLAST;
output   phase_1_TLAST;
output   phase_2_TLAST;
output   phase_3_TLAST;
output  [63:0] phases_TDATA;
output   phases_TVALID;
input   phases_TREADY;
output  [8:0] phases_TUSER;
output   phases_TLAST;

reg instream_TREADY;

 reg    ap_rst_n_inv;
reg   [0:0] read_r;
reg   [31:0] in_data_V_4;
reg   [31:0] in_data_V_5;
reg   [31:0] in_data_V_6;
reg   [31:0] in_data_V_7;
reg   [7:0] in_user_V;
reg   [0:0] in_last;
reg    instream_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
wire   [0:0] read_load_load_fu_327_p1;
reg    phase_0_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    phase_1_TDATA_blk_n;
reg    phase_2_TDATA_blk_n;
reg    phase_3_TDATA_blk_n;
reg    phases_TDATA_blk_n;
reg   [8:0] tmpphases_user_V_reg_249;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter2_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
reg    ap_block_state21_io;
wire    regslice_both_phase_0_data_V_U_apdone_blk;
wire    regslice_both_phase_1_data_V_U_apdone_blk;
wire    regslice_both_phase_2_data_V_U_apdone_blk;
wire    regslice_both_phase_3_data_V_U_apdone_blk;
wire    regslice_both_phases_data_V_U_apdone_blk;
reg    ap_block_state22_pp0_stage0_iter21;
reg    ap_block_state22_io;
reg    ap_block_pp0_stage0_11001;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter3_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter4_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter5_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter6_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter7_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter8_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter9_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter10_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter11_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter12_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter13_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter14_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter15_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter16_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter17_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter18_reg;
reg   [8:0] tmpphases_user_V_reg_249_pp0_iter19_reg;
wire   [8:0] out_user_V_fu_363_p2;
wire   [31:0] trunc_ln321_fu_381_p1;
wire   [8:0] out_user_V_1_fu_491_p3;
reg   [14:0] trunc_ln_reg_992;
wire   [0:0] icmp_ln414_fu_537_p2;
reg   [0:0] icmp_ln414_reg_997;
reg   [14:0] trunc_ln708_1_reg_1002;
wire   [0:0] icmp_ln414_1_fu_579_p2;
reg   [0:0] icmp_ln414_1_reg_1007;
reg   [14:0] trunc_ln708_2_reg_1012;
wire   [0:0] icmp_ln414_2_fu_617_p2;
reg   [0:0] icmp_ln414_2_reg_1017;
reg   [14:0] trunc_ln708_3_reg_1022;
wire   [0:0] icmp_ln414_3_fu_659_p2;
reg   [0:0] icmp_ln414_3_reg_1027;
reg   [14:0] trunc_ln708_4_reg_1032;
wire   [0:0] icmp_ln414_4_fu_697_p2;
reg   [0:0] icmp_ln414_4_reg_1037;
reg   [14:0] trunc_ln708_5_reg_1042;
wire   [0:0] icmp_ln414_5_fu_739_p2;
reg   [0:0] icmp_ln414_5_reg_1047;
reg   [14:0] trunc_ln708_6_reg_1052;
wire   [0:0] icmp_ln414_6_fu_777_p2;
reg   [0:0] icmp_ln414_6_reg_1057;
reg   [14:0] trunc_ln708_7_reg_1062;
wire   [0:0] icmp_ln414_7_fu_819_p2;
reg   [0:0] icmp_ln414_7_reg_1067;
wire   [15:0] add_ln415_fu_831_p2;
reg   [15:0] add_ln415_reg_1072;
wire   [15:0] add_ln415_1_fu_843_p2;
reg   [15:0] add_ln415_1_reg_1077;
wire   [15:0] add_ln415_2_fu_855_p2;
reg   [15:0] add_ln415_2_reg_1082;
wire   [15:0] add_ln415_3_fu_867_p2;
reg   [15:0] add_ln415_3_reg_1087;
wire   [15:0] add_ln415_4_fu_879_p2;
reg   [15:0] add_ln415_4_reg_1092;
wire   [15:0] add_ln415_5_fu_891_p2;
reg   [15:0] add_ln415_5_reg_1097;
wire   [15:0] add_ln415_6_fu_903_p2;
reg   [15:0] add_ln415_6_reg_1102;
wire   [15:0] add_ln415_7_fu_915_p2;
reg   [15:0] add_ln415_7_reg_1107;
wire   [15:0] grp_cordic_base_fu_299_ap_return;
wire   [15:0] grp_cordic_base_fu_306_ap_return;
wire   [15:0] grp_cordic_base_fu_313_ap_return;
wire   [15:0] grp_cordic_base_fu_320_ap_return;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    grp_cordic_base_fu_299_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call24;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call24;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call24;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call24;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call24;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call24;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call24;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call24;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call24;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call24;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call24;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call24;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call24;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call24;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call24;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call24;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call24;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call24;
wire    ap_block_state19_pp0_stage0_iter18_ignore_call24;
wire    ap_block_state20_pp0_stage0_iter19_ignore_call24;
wire    ap_block_state21_pp0_stage0_iter20_ignore_call24;
reg    ap_block_state22_pp0_stage0_iter21_ignore_call24;
reg    ap_block_pp0_stage0_11001_ignoreCallOp125;
reg    grp_cordic_base_fu_306_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call42;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call42;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call42;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call42;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call42;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call42;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call42;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call42;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call42;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call42;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call42;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call42;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call42;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call42;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call42;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call42;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call42;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call42;
wire    ap_block_state19_pp0_stage0_iter18_ignore_call42;
wire    ap_block_state20_pp0_stage0_iter19_ignore_call42;
wire    ap_block_state21_pp0_stage0_iter20_ignore_call42;
reg    ap_block_state22_pp0_stage0_iter21_ignore_call42;
reg    ap_block_pp0_stage0_11001_ignoreCallOp126;
reg    grp_cordic_base_fu_313_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call60;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call60;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call60;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call60;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call60;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call60;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call60;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call60;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call60;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call60;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call60;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call60;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call60;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call60;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call60;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call60;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call60;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call60;
wire    ap_block_state19_pp0_stage0_iter18_ignore_call60;
wire    ap_block_state20_pp0_stage0_iter19_ignore_call60;
wire    ap_block_state21_pp0_stage0_iter20_ignore_call60;
reg    ap_block_state22_pp0_stage0_iter21_ignore_call60;
reg    ap_block_pp0_stage0_11001_ignoreCallOp127;
reg    grp_cordic_base_fu_320_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call78;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call78;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call78;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call78;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call78;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call78;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call78;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call78;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call78;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call78;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call78;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call78;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call78;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call78;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call78;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call78;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call78;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call78;
wire    ap_block_state19_pp0_stage0_iter18_ignore_call78;
wire    ap_block_state20_pp0_stage0_iter19_ignore_call78;
wire    ap_block_state21_pp0_stage0_iter20_ignore_call78;
reg    ap_block_state22_pp0_stage0_iter21_ignore_call78;
reg    ap_block_pp0_stage0_11001_ignoreCallOp128;
wire   [31:0] ap_phi_reg_pp0_iter0_cart_V_3_reg_213;
reg   [31:0] ap_phi_reg_pp0_iter1_cart_V_3_reg_213;
wire   [31:0] ap_phi_reg_pp0_iter0_cart_V_2_reg_222;
reg   [31:0] ap_phi_reg_pp0_iter1_cart_V_2_reg_222;
wire   [31:0] ap_phi_reg_pp0_iter0_cart_V_1_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter1_cart_V_1_reg_231;
wire   [31:0] ap_phi_reg_pp0_iter0_cart_V_0_reg_240;
reg   [31:0] ap_phi_reg_pp0_iter1_cart_V_0_reg_240;
wire   [8:0] ap_phi_reg_pp0_iter0_tmpphases_user_V_reg_249;
reg   [8:0] ap_phi_reg_pp0_iter1_tmpphases_user_V_reg_249;
wire   [0:0] ap_phi_reg_pp0_iter0_storemerge_reg_264;
reg   [0:0] ap_phi_reg_pp0_iter1_storemerge_reg_264;
wire   [0:0] ap_phi_reg_pp0_iter0_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter1_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter2_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter3_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter4_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter5_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter6_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter7_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter8_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter9_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter10_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter11_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter12_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter13_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter14_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter15_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter16_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter17_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter18_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter19_tmpphases_last_reg_277;
reg   [0:0] ap_phi_reg_pp0_iter20_tmpphases_last_reg_277;
reg   [0:0] ap_sig_allocacmp_read_load;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] shl_ln_fu_355_p3;
wire   [0:0] tmp_fu_515_p3;
wire   [0:0] trunc_ln414_fu_523_p1;
wire   [15:0] and_ln_fu_527_p4;
wire   [0:0] tmp_8_fu_553_p3;
wire   [0:0] tmp_9_fu_561_p3;
wire   [15:0] and_ln414_1_fu_569_p4;
wire   [0:0] tmp_10_fu_595_p3;
wire   [0:0] trunc_ln414_1_fu_603_p1;
wire   [15:0] and_ln414_4_fu_607_p4;
wire   [0:0] tmp_11_fu_633_p3;
wire   [0:0] tmp_12_fu_641_p3;
wire   [15:0] and_ln414_5_fu_649_p4;
wire   [0:0] tmp_13_fu_675_p3;
wire   [0:0] trunc_ln414_2_fu_683_p1;
wire   [15:0] and_ln414_2_fu_687_p4;
wire   [0:0] tmp_14_fu_713_p3;
wire   [0:0] tmp_15_fu_721_p3;
wire   [15:0] and_ln414_6_fu_729_p4;
wire   [0:0] tmp_16_fu_755_p3;
wire   [0:0] trunc_ln414_3_fu_763_p1;
wire   [15:0] and_ln414_3_fu_767_p4;
wire   [0:0] tmp_17_fu_793_p3;
wire   [0:0] tmp_18_fu_801_p3;
wire   [15:0] and_ln414_7_fu_809_p4;
wire  signed [15:0] sext_ln708_fu_825_p1;
wire   [15:0] zext_ln415_fu_828_p1;
wire  signed [15:0] sext_ln708_1_fu_837_p1;
wire   [15:0] zext_ln415_1_fu_840_p1;
wire  signed [15:0] sext_ln708_2_fu_849_p1;
wire   [15:0] zext_ln415_4_fu_852_p1;
wire  signed [15:0] sext_ln708_3_fu_861_p1;
wire   [15:0] zext_ln415_5_fu_864_p1;
wire  signed [15:0] sext_ln708_4_fu_873_p1;
wire   [15:0] zext_ln415_2_fu_876_p1;
wire  signed [15:0] sext_ln708_5_fu_885_p1;
wire   [15:0] zext_ln415_6_fu_888_p1;
wire  signed [15:0] sext_ln708_6_fu_897_p1;
wire   [15:0] zext_ln415_3_fu_900_p1;
wire  signed [15:0] sext_ln708_7_fu_909_p1;
wire   [15:0] zext_ln415_7_fu_912_p1;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_instream_data_V_U_apdone_blk;
wire   [255:0] instream_TDATA_int;
wire    instream_TVALID_int;
reg    instream_TREADY_int;
wire    regslice_both_instream_data_V_U_ack_in;
wire    regslice_both_instream_user_V_U_apdone_blk;
wire   [7:0] instream_TUSER_int;
wire    regslice_both_instream_user_V_U_vld_out;
wire    regslice_both_instream_user_V_U_ack_in;
wire    regslice_both_w1_instream_last_U_apdone_blk;
wire    instream_TLAST_int;
wire    regslice_both_w1_instream_last_U_vld_out;
wire    regslice_both_w1_instream_last_U_ack_in;
reg    phase_0_TVALID_int;
wire    phase_0_TREADY_int;
wire    regslice_both_phase_0_data_V_U_vld_out;
reg    phase_1_TVALID_int;
wire    phase_1_TREADY_int;
wire    regslice_both_phase_1_data_V_U_vld_out;
reg    phase_2_TVALID_int;
wire    phase_2_TREADY_int;
wire    regslice_both_phase_2_data_V_U_vld_out;
reg    phase_3_TVALID_int;
wire    phase_3_TREADY_int;
wire    regslice_both_phase_3_data_V_U_vld_out;
wire    regslice_both_phase_0_user_V_U_apdone_blk;
wire    regslice_both_phase_0_user_V_U_ack_in_dummy;
wire    regslice_both_phase_0_user_V_U_vld_out;
wire    regslice_both_phase_1_user_V_U_apdone_blk;
wire    regslice_both_phase_1_user_V_U_ack_in_dummy;
wire    regslice_both_phase_1_user_V_U_vld_out;
wire    regslice_both_phase_2_user_V_U_apdone_blk;
wire    regslice_both_phase_2_user_V_U_ack_in_dummy;
wire    regslice_both_phase_2_user_V_U_vld_out;
wire    regslice_both_phase_3_user_V_U_apdone_blk;
wire    regslice_both_phase_3_user_V_U_ack_in_dummy;
wire    regslice_both_phase_3_user_V_U_vld_out;
wire    regslice_both_w1_phase_0_last_U_apdone_blk;
wire    phase_0_TLAST_int;
wire    regslice_both_w1_phase_0_last_U_ack_in_dummy;
wire    regslice_both_w1_phase_0_last_U_vld_out;
wire    regslice_both_w1_phase_1_last_U_apdone_blk;
wire    phase_1_TLAST_int;
wire    regslice_both_w1_phase_1_last_U_ack_in_dummy;
wire    regslice_both_w1_phase_1_last_U_vld_out;
wire    regslice_both_w1_phase_2_last_U_apdone_blk;
wire    phase_2_TLAST_int;
wire    regslice_both_w1_phase_2_last_U_ack_in_dummy;
wire    regslice_both_w1_phase_2_last_U_vld_out;
wire    regslice_both_w1_phase_3_last_U_apdone_blk;
wire    phase_3_TLAST_int;
wire    regslice_both_w1_phase_3_last_U_ack_in_dummy;
wire    regslice_both_w1_phase_3_last_U_vld_out;
wire   [63:0] phases_TDATA_int;
reg    phases_TVALID_int;
wire    phases_TREADY_int;
wire    regslice_both_phases_data_V_U_vld_out;
wire    regslice_both_phases_user_V_U_apdone_blk;
wire    regslice_both_phases_user_V_U_ack_in_dummy;
wire    regslice_both_phases_user_V_U_vld_out;
wire    regslice_both_w1_phases_last_U_apdone_blk;
wire    phases_TLAST_int;
wire    regslice_both_w1_phases_last_U_ack_in_dummy;
wire    regslice_both_w1_phases_last_U_vld_out;
reg    ap_condition_548;

// power-on initialization
initial begin
#0 read_r = 1'd1;
#0 in_data_V_4 = 32'd0;
#0 in_data_V_5 = 32'd0;
#0 in_data_V_6 = 32'd0;
#0 in_data_V_7 = 32'd0;
#0 in_user_V = 8'd0;
#0 in_last = 1'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
end

cordic_base grp_cordic_base_fu_299(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .inputData_cartesian_M_real_V_read(add_ln415_reg_1072),
    .inputData_cartesian_M_imag_V_read(add_ln415_1_reg_1077),
    .ap_return(grp_cordic_base_fu_299_ap_return),
    .ap_ce(grp_cordic_base_fu_299_ap_ce)
);

cordic_base grp_cordic_base_fu_306(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .inputData_cartesian_M_real_V_read(add_ln415_2_reg_1082),
    .inputData_cartesian_M_imag_V_read(add_ln415_3_reg_1087),
    .ap_return(grp_cordic_base_fu_306_ap_return),
    .ap_ce(grp_cordic_base_fu_306_ap_ce)
);

cordic_base grp_cordic_base_fu_313(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .inputData_cartesian_M_real_V_read(add_ln415_4_reg_1092),
    .inputData_cartesian_M_imag_V_read(add_ln415_5_reg_1097),
    .ap_return(grp_cordic_base_fu_313_ap_return),
    .ap_ce(grp_cordic_base_fu_313_ap_ce)
);

cordic_base grp_cordic_base_fu_320(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .inputData_cartesian_M_real_V_read(add_ln415_6_reg_1102),
    .inputData_cartesian_M_imag_V_read(add_ln415_7_reg_1107),
    .ap_return(grp_cordic_base_fu_320_ap_return),
    .ap_ce(grp_cordic_base_fu_320_ap_ce)
);

regslice_both #(
    .DataWidth( 256 ))
regslice_both_instream_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(instream_TDATA),
    .vld_in(instream_TVALID),
    .ack_in(regslice_both_instream_data_V_U_ack_in),
    .data_out(instream_TDATA_int),
    .vld_out(instream_TVALID_int),
    .ack_out(instream_TREADY_int),
    .apdone_blk(regslice_both_instream_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 8 ))
regslice_both_instream_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(instream_TUSER),
    .vld_in(instream_TVALID),
    .ack_in(regslice_both_instream_user_V_U_ack_in),
    .data_out(instream_TUSER_int),
    .vld_out(regslice_both_instream_user_V_U_vld_out),
    .ack_out(instream_TREADY_int),
    .apdone_blk(regslice_both_instream_user_V_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_instream_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(instream_TLAST),
    .vld_in(instream_TVALID),
    .ack_in(regslice_both_w1_instream_last_U_ack_in),
    .data_out(instream_TLAST_int),
    .vld_out(regslice_both_w1_instream_last_U_vld_out),
    .ack_out(instream_TREADY_int),
    .apdone_blk(regslice_both_w1_instream_last_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_phase_0_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_cordic_base_fu_299_ap_return),
    .vld_in(phase_0_TVALID_int),
    .ack_in(phase_0_TREADY_int),
    .data_out(phase_0_TDATA),
    .vld_out(regslice_both_phase_0_data_V_U_vld_out),
    .ack_out(phase_0_TREADY),
    .apdone_blk(regslice_both_phase_0_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_phase_1_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_cordic_base_fu_306_ap_return),
    .vld_in(phase_1_TVALID_int),
    .ack_in(phase_1_TREADY_int),
    .data_out(phase_1_TDATA),
    .vld_out(regslice_both_phase_1_data_V_U_vld_out),
    .ack_out(phase_1_TREADY),
    .apdone_blk(regslice_both_phase_1_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_phase_2_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_cordic_base_fu_313_ap_return),
    .vld_in(phase_2_TVALID_int),
    .ack_in(phase_2_TREADY_int),
    .data_out(phase_2_TDATA),
    .vld_out(regslice_both_phase_2_data_V_U_vld_out),
    .ack_out(phase_2_TREADY),
    .apdone_blk(regslice_both_phase_2_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_phase_3_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_cordic_base_fu_320_ap_return),
    .vld_in(phase_3_TVALID_int),
    .ack_in(phase_3_TREADY_int),
    .data_out(phase_3_TDATA),
    .vld_out(regslice_both_phase_3_data_V_U_vld_out),
    .ack_out(phase_3_TREADY),
    .apdone_blk(regslice_both_phase_3_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 9 ))
regslice_both_phase_0_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmpphases_user_V_reg_249_pp0_iter19_reg),
    .vld_in(phase_0_TVALID_int),
    .ack_in(regslice_both_phase_0_user_V_U_ack_in_dummy),
    .data_out(phase_0_TUSER),
    .vld_out(regslice_both_phase_0_user_V_U_vld_out),
    .ack_out(phase_0_TREADY),
    .apdone_blk(regslice_both_phase_0_user_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 9 ))
regslice_both_phase_1_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmpphases_user_V_reg_249_pp0_iter19_reg),
    .vld_in(phase_1_TVALID_int),
    .ack_in(regslice_both_phase_1_user_V_U_ack_in_dummy),
    .data_out(phase_1_TUSER),
    .vld_out(regslice_both_phase_1_user_V_U_vld_out),
    .ack_out(phase_1_TREADY),
    .apdone_blk(regslice_both_phase_1_user_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 9 ))
regslice_both_phase_2_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmpphases_user_V_reg_249_pp0_iter19_reg),
    .vld_in(phase_2_TVALID_int),
    .ack_in(regslice_both_phase_2_user_V_U_ack_in_dummy),
    .data_out(phase_2_TUSER),
    .vld_out(regslice_both_phase_2_user_V_U_vld_out),
    .ack_out(phase_2_TREADY),
    .apdone_blk(regslice_both_phase_2_user_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 9 ))
regslice_both_phase_3_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmpphases_user_V_reg_249_pp0_iter19_reg),
    .vld_in(phase_3_TVALID_int),
    .ack_in(regslice_both_phase_3_user_V_U_ack_in_dummy),
    .data_out(phase_3_TUSER),
    .vld_out(regslice_both_phase_3_user_V_U_vld_out),
    .ack_out(phase_3_TREADY),
    .apdone_blk(regslice_both_phase_3_user_V_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_phase_0_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(phase_0_TLAST_int),
    .vld_in(phase_0_TVALID_int),
    .ack_in(regslice_both_w1_phase_0_last_U_ack_in_dummy),
    .data_out(phase_0_TLAST),
    .vld_out(regslice_both_w1_phase_0_last_U_vld_out),
    .ack_out(phase_0_TREADY),
    .apdone_blk(regslice_both_w1_phase_0_last_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_phase_1_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(phase_1_TLAST_int),
    .vld_in(phase_1_TVALID_int),
    .ack_in(regslice_both_w1_phase_1_last_U_ack_in_dummy),
    .data_out(phase_1_TLAST),
    .vld_out(regslice_both_w1_phase_1_last_U_vld_out),
    .ack_out(phase_1_TREADY),
    .apdone_blk(regslice_both_w1_phase_1_last_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_phase_2_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(phase_2_TLAST_int),
    .vld_in(phase_2_TVALID_int),
    .ack_in(regslice_both_w1_phase_2_last_U_ack_in_dummy),
    .data_out(phase_2_TLAST),
    .vld_out(regslice_both_w1_phase_2_last_U_vld_out),
    .ack_out(phase_2_TREADY),
    .apdone_blk(regslice_both_w1_phase_2_last_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_phase_3_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(phase_3_TLAST_int),
    .vld_in(phase_3_TVALID_int),
    .ack_in(regslice_both_w1_phase_3_last_U_ack_in_dummy),
    .data_out(phase_3_TLAST),
    .vld_out(regslice_both_w1_phase_3_last_U_vld_out),
    .ack_out(phase_3_TREADY),
    .apdone_blk(regslice_both_w1_phase_3_last_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 64 ))
regslice_both_phases_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(phases_TDATA_int),
    .vld_in(phases_TVALID_int),
    .ack_in(phases_TREADY_int),
    .data_out(phases_TDATA),
    .vld_out(regslice_both_phases_data_V_U_vld_out),
    .ack_out(phases_TREADY),
    .apdone_blk(regslice_both_phases_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 9 ))
regslice_both_phases_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmpphases_user_V_reg_249_pp0_iter19_reg),
    .vld_in(phases_TVALID_int),
    .ack_in(regslice_both_phases_user_V_U_ack_in_dummy),
    .data_out(phases_TUSER),
    .vld_out(regslice_both_phases_user_V_U_vld_out),
    .ack_out(phases_TREADY),
    .apdone_blk(regslice_both_phases_user_V_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_phases_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(phases_TLAST_int),
    .vld_in(phases_TVALID_int),
    .ack_in(regslice_both_w1_phases_last_U_ack_in_dummy),
    .data_out(phases_TLAST),
    .vld_out(regslice_both_w1_phases_last_U_vld_out),
    .ack_out(phases_TREADY),
    .apdone_blk(regslice_both_w1_phases_last_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_548)) begin
        if ((ap_sig_allocacmp_read_load == 1'd1)) begin
            ap_phi_reg_pp0_iter1_cart_V_0_reg_240 <= trunc_ln321_fu_381_p1;
        end else if ((read_load_load_fu_327_p1 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_cart_V_0_reg_240 <= in_data_V_4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_cart_V_0_reg_240 <= ap_phi_reg_pp0_iter0_cart_V_0_reg_240;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_548)) begin
        if ((ap_sig_allocacmp_read_load == 1'd1)) begin
            ap_phi_reg_pp0_iter1_cart_V_1_reg_231 <= {{instream_TDATA_int[63:32]}};
        end else if ((read_load_load_fu_327_p1 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_cart_V_1_reg_231 <= in_data_V_5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_cart_V_1_reg_231 <= ap_phi_reg_pp0_iter0_cart_V_1_reg_231;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_548)) begin
        if ((ap_sig_allocacmp_read_load == 1'd1)) begin
            ap_phi_reg_pp0_iter1_cart_V_2_reg_222 <= {{instream_TDATA_int[95:64]}};
        end else if ((read_load_load_fu_327_p1 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_cart_V_2_reg_222 <= in_data_V_6;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_cart_V_2_reg_222 <= ap_phi_reg_pp0_iter0_cart_V_2_reg_222;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_548)) begin
        if ((ap_sig_allocacmp_read_load == 1'd1)) begin
            ap_phi_reg_pp0_iter1_cart_V_3_reg_213 <= {{instream_TDATA_int[127:96]}};
        end else if ((read_load_load_fu_327_p1 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_cart_V_3_reg_213 <= in_data_V_7;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_cart_V_3_reg_213 <= ap_phi_reg_pp0_iter0_cart_V_3_reg_213;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_548)) begin
        if ((ap_sig_allocacmp_read_load == 1'd1)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_264 <= 1'd0;
        end else if ((read_load_load_fu_327_p1 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_264 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_264 <= ap_phi_reg_pp0_iter0_storemerge_reg_264;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_548)) begin
        if ((ap_sig_allocacmp_read_load == 1'd1)) begin
            ap_phi_reg_pp0_iter1_tmpphases_last_reg_277 <= 1'd0;
        end else if ((read_load_load_fu_327_p1 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_tmpphases_last_reg_277 <= in_last;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter0_tmpphases_last_reg_277;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_548)) begin
        if ((ap_sig_allocacmp_read_load == 1'd1)) begin
            ap_phi_reg_pp0_iter1_tmpphases_user_V_reg_249 <= out_user_V_1_fu_491_p3;
        end else if ((read_load_load_fu_327_p1 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_tmpphases_user_V_reg_249 <= out_user_V_fu_363_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmpphases_user_V_reg_249 <= ap_phi_reg_pp0_iter0_tmpphases_user_V_reg_249;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln415_1_reg_1077 <= add_ln415_1_fu_843_p2;
        add_ln415_2_reg_1082 <= add_ln415_2_fu_855_p2;
        add_ln415_3_reg_1087 <= add_ln415_3_fu_867_p2;
        add_ln415_4_reg_1092 <= add_ln415_4_fu_879_p2;
        add_ln415_5_reg_1097 <= add_ln415_5_fu_891_p2;
        add_ln415_6_reg_1102 <= add_ln415_6_fu_903_p2;
        add_ln415_7_reg_1107 <= add_ln415_7_fu_915_p2;
        add_ln415_reg_1072 <= add_ln415_fu_831_p2;
        tmpphases_user_V_reg_249_pp0_iter10_reg <= tmpphases_user_V_reg_249_pp0_iter9_reg;
        tmpphases_user_V_reg_249_pp0_iter11_reg <= tmpphases_user_V_reg_249_pp0_iter10_reg;
        tmpphases_user_V_reg_249_pp0_iter12_reg <= tmpphases_user_V_reg_249_pp0_iter11_reg;
        tmpphases_user_V_reg_249_pp0_iter13_reg <= tmpphases_user_V_reg_249_pp0_iter12_reg;
        tmpphases_user_V_reg_249_pp0_iter14_reg <= tmpphases_user_V_reg_249_pp0_iter13_reg;
        tmpphases_user_V_reg_249_pp0_iter15_reg <= tmpphases_user_V_reg_249_pp0_iter14_reg;
        tmpphases_user_V_reg_249_pp0_iter16_reg <= tmpphases_user_V_reg_249_pp0_iter15_reg;
        tmpphases_user_V_reg_249_pp0_iter17_reg <= tmpphases_user_V_reg_249_pp0_iter16_reg;
        tmpphases_user_V_reg_249_pp0_iter18_reg <= tmpphases_user_V_reg_249_pp0_iter17_reg;
        tmpphases_user_V_reg_249_pp0_iter19_reg <= tmpphases_user_V_reg_249_pp0_iter18_reg;
        tmpphases_user_V_reg_249_pp0_iter2_reg <= tmpphases_user_V_reg_249;
        tmpphases_user_V_reg_249_pp0_iter3_reg <= tmpphases_user_V_reg_249_pp0_iter2_reg;
        tmpphases_user_V_reg_249_pp0_iter4_reg <= tmpphases_user_V_reg_249_pp0_iter3_reg;
        tmpphases_user_V_reg_249_pp0_iter5_reg <= tmpphases_user_V_reg_249_pp0_iter4_reg;
        tmpphases_user_V_reg_249_pp0_iter6_reg <= tmpphases_user_V_reg_249_pp0_iter5_reg;
        tmpphases_user_V_reg_249_pp0_iter7_reg <= tmpphases_user_V_reg_249_pp0_iter6_reg;
        tmpphases_user_V_reg_249_pp0_iter8_reg <= tmpphases_user_V_reg_249_pp0_iter7_reg;
        tmpphases_user_V_reg_249_pp0_iter9_reg <= tmpphases_user_V_reg_249_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter9_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter11_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter10_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter11_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter12_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter13_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter14_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter15_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter16_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter17_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter19_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter18_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter20_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter19_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter1_tmpphases_last_reg_277;
        read_r <= ap_phi_reg_pp0_iter1_storemerge_reg_264;
        tmpphases_user_V_reg_249 <= ap_phi_reg_pp0_iter1_tmpphases_user_V_reg_249;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter2_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter3_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter4_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter5_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter6_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter7_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_tmpphases_last_reg_277 <= ap_phi_reg_pp0_iter8_tmpphases_last_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln414_1_reg_1007 <= icmp_ln414_1_fu_579_p2;
        icmp_ln414_2_reg_1017 <= icmp_ln414_2_fu_617_p2;
        icmp_ln414_3_reg_1027 <= icmp_ln414_3_fu_659_p2;
        icmp_ln414_4_reg_1037 <= icmp_ln414_4_fu_697_p2;
        icmp_ln414_5_reg_1047 <= icmp_ln414_5_fu_739_p2;
        icmp_ln414_6_reg_1057 <= icmp_ln414_6_fu_777_p2;
        icmp_ln414_7_reg_1067 <= icmp_ln414_7_fu_819_p2;
        icmp_ln414_reg_997 <= icmp_ln414_fu_537_p2;
        trunc_ln708_1_reg_1002 <= {{ap_phi_reg_pp0_iter1_cart_V_0_reg_240[31:17]}};
        trunc_ln708_2_reg_1012 <= {{ap_phi_reg_pp0_iter1_cart_V_1_reg_231[15:1]}};
        trunc_ln708_3_reg_1022 <= {{ap_phi_reg_pp0_iter1_cart_V_1_reg_231[31:17]}};
        trunc_ln708_4_reg_1032 <= {{ap_phi_reg_pp0_iter1_cart_V_2_reg_222[15:1]}};
        trunc_ln708_5_reg_1042 <= {{ap_phi_reg_pp0_iter1_cart_V_2_reg_222[31:17]}};
        trunc_ln708_6_reg_1052 <= {{ap_phi_reg_pp0_iter1_cart_V_3_reg_213[15:1]}};
        trunc_ln708_7_reg_1062 <= {{ap_phi_reg_pp0_iter1_cart_V_3_reg_213[31:17]}};
        trunc_ln_reg_992 <= {{ap_phi_reg_pp0_iter1_cart_V_0_reg_240[15:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_allocacmp_read_load == 1'd1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_data_V_4 <= {{instream_TDATA_int[159:128]}};
        in_data_V_5 <= {{instream_TDATA_int[191:160]}};
        in_data_V_6 <= {{instream_TDATA_int[223:192]}};
        in_data_V_7 <= {{instream_TDATA_int[255:224]}};
        in_last <= instream_TLAST_int;
        in_user_V <= instream_TUSER_int;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (1'b1 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_sig_allocacmp_read_load = ap_phi_reg_pp0_iter1_storemerge_reg_264;
    end else begin
        ap_sig_allocacmp_read_load = read_r;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp125) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_cordic_base_fu_299_ap_ce = 1'b1;
    end else begin
        grp_cordic_base_fu_299_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp126) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_cordic_base_fu_306_ap_ce = 1'b1;
    end else begin
        grp_cordic_base_fu_306_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp127) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_cordic_base_fu_313_ap_ce = 1'b1;
    end else begin
        grp_cordic_base_fu_313_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp128) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_cordic_base_fu_320_ap_ce = 1'b1;
    end else begin
        grp_cordic_base_fu_320_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_sig_allocacmp_read_load == 1'd1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        instream_TDATA_blk_n = instream_TVALID_int;
    end else begin
        instream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((instream_TVALID == 1'b1) & (regslice_both_instream_data_V_U_ack_in == 1'b1))) begin
        instream_TREADY = 1'b1;
    end else begin
        instream_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_sig_allocacmp_read_load == 1'd1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        instream_TREADY_int = 1'b1;
    end else begin
        instream_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter21 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter20 == 1'b1)))) begin
        phase_0_TDATA_blk_n = phase_0_TREADY_int;
    end else begin
        phase_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        phase_0_TVALID_int = 1'b1;
    end else begin
        phase_0_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter21 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter20 == 1'b1)))) begin
        phase_1_TDATA_blk_n = phase_1_TREADY_int;
    end else begin
        phase_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        phase_1_TVALID_int = 1'b1;
    end else begin
        phase_1_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter21 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter20 == 1'b1)))) begin
        phase_2_TDATA_blk_n = phase_2_TREADY_int;
    end else begin
        phase_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        phase_2_TVALID_int = 1'b1;
    end else begin
        phase_2_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter21 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter20 == 1'b1)))) begin
        phase_3_TDATA_blk_n = phase_3_TREADY_int;
    end else begin
        phase_3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        phase_3_TVALID_int = 1'b1;
    end else begin
        phase_3_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter21 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter20 == 1'b1)))) begin
        phases_TDATA_blk_n = phases_TREADY_int;
    end else begin
        phases_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        phases_TVALID_int = 1'b1;
    end else begin
        phases_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln415_1_fu_843_p2 = ($signed(sext_ln708_1_fu_837_p1) + $signed(zext_ln415_1_fu_840_p1));

assign add_ln415_2_fu_855_p2 = ($signed(sext_ln708_2_fu_849_p1) + $signed(zext_ln415_4_fu_852_p1));

assign add_ln415_3_fu_867_p2 = ($signed(sext_ln708_3_fu_861_p1) + $signed(zext_ln415_5_fu_864_p1));

assign add_ln415_4_fu_879_p2 = ($signed(sext_ln708_4_fu_873_p1) + $signed(zext_ln415_2_fu_876_p1));

assign add_ln415_5_fu_891_p2 = ($signed(sext_ln708_5_fu_885_p1) + $signed(zext_ln415_6_fu_888_p1));

assign add_ln415_6_fu_903_p2 = ($signed(sext_ln708_6_fu_897_p1) + $signed(zext_ln415_3_fu_900_p1));

assign add_ln415_7_fu_915_p2 = ($signed(sext_ln708_7_fu_909_p1) + $signed(zext_ln415_7_fu_912_p1));

assign add_ln415_fu_831_p2 = ($signed(sext_ln708_fu_825_p1) + $signed(zext_ln415_fu_828_p1));

assign and_ln414_1_fu_569_p4 = {{{tmp_8_fu_553_p3}, {14'd0}}, {tmp_9_fu_561_p3}};

assign and_ln414_2_fu_687_p4 = {{{tmp_13_fu_675_p3}, {14'd0}}, {trunc_ln414_2_fu_683_p1}};

assign and_ln414_3_fu_767_p4 = {{{tmp_16_fu_755_p3}, {14'd0}}, {trunc_ln414_3_fu_763_p1}};

assign and_ln414_4_fu_607_p4 = {{{tmp_10_fu_595_p3}, {14'd0}}, {trunc_ln414_1_fu_603_p1}};

assign and_ln414_5_fu_649_p4 = {{{tmp_11_fu_633_p3}, {14'd0}}, {tmp_12_fu_641_p3}};

assign and_ln414_6_fu_729_p4 = {{{tmp_14_fu_713_p3}, {14'd0}}, {tmp_15_fu_721_p3}};

assign and_ln414_7_fu_809_p4 = {{{tmp_17_fu_793_p3}, {14'd0}}, {tmp_18_fu_801_p3}};

assign and_ln_fu_527_p4 = {{{tmp_fu_515_p3}, {14'd0}}, {trunc_ln414_fu_523_p1}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter21 == 1'b1) & ((regslice_both_phases_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_3_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_2_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_1_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_0_data_V_U_apdone_blk == 1'b1))) | ((ap_sig_allocacmp_read_load == 1'd1) & (instream_TVALID_int == 1'b0) & (1'b1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter21 == 1'b1) & ((1'b1 == ap_block_state22_io) | (regslice_both_phases_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_3_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_2_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_1_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_0_data_V_U_apdone_blk == 1'b1))) | ((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp0_iter20 == 1'b1)) | ((ap_sig_allocacmp_read_load == 1'd1) & (instream_TVALID_int == 1'b0) & (1'b1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp125 = (((ap_enable_reg_pp0_iter21 == 1'b1) & ((1'b1 == ap_block_state22_io) | (regslice_both_phases_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_3_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_2_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_1_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_0_data_V_U_apdone_blk == 1'b1))) | ((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp0_iter20 == 1'b1)) | ((ap_sig_allocacmp_read_load == 1'd1) & (instream_TVALID_int == 1'b0) & (1'b1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp126 = (((ap_enable_reg_pp0_iter21 == 1'b1) & ((1'b1 == ap_block_state22_io) | (regslice_both_phases_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_3_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_2_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_1_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_0_data_V_U_apdone_blk == 1'b1))) | ((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp0_iter20 == 1'b1)) | ((ap_sig_allocacmp_read_load == 1'd1) & (instream_TVALID_int == 1'b0) & (1'b1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp127 = (((ap_enable_reg_pp0_iter21 == 1'b1) & ((1'b1 == ap_block_state22_io) | (regslice_both_phases_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_3_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_2_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_1_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_0_data_V_U_apdone_blk == 1'b1))) | ((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp0_iter20 == 1'b1)) | ((ap_sig_allocacmp_read_load == 1'd1) & (instream_TVALID_int == 1'b0) & (1'b1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp128 = (((ap_enable_reg_pp0_iter21 == 1'b1) & ((1'b1 == ap_block_state22_io) | (regslice_both_phases_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_3_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_2_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_1_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_0_data_V_U_apdone_blk == 1'b1))) | ((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp0_iter20 == 1'b1)) | ((ap_sig_allocacmp_read_load == 1'd1) & (instream_TVALID_int == 1'b0) & (1'b1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter21 == 1'b1) & ((1'b1 == ap_block_state22_io) | (regslice_both_phases_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_3_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_2_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_1_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_0_data_V_U_apdone_blk == 1'b1))) | ((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp0_iter20 == 1'b1)) | ((ap_sig_allocacmp_read_load == 1'd1) & (instream_TVALID_int == 1'b0) & (1'b1 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18_ignore_call78 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_sig_allocacmp_read_load == 1'd1) & (instream_TVALID_int == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call24 = ((ap_sig_allocacmp_read_load == 1'd1) & (instream_TVALID_int == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call42 = ((ap_sig_allocacmp_read_load == 1'd1) & (instream_TVALID_int == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call60 = ((ap_sig_allocacmp_read_load == 1'd1) & (instream_TVALID_int == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call78 = ((ap_sig_allocacmp_read_load == 1'd1) & (instream_TVALID_int == 1'b0));
end

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19_ignore_call78 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_io = ((phases_TREADY_int == 1'b0) | (phase_3_TREADY_int == 1'b0) | (phase_2_TREADY_int == 1'b0) | (phase_1_TREADY_int == 1'b0) | (phase_0_TREADY_int == 1'b0));
end

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20_ignore_call78 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_io = ((phases_TREADY_int == 1'b0) | (phase_3_TREADY_int == 1'b0) | (phase_2_TREADY_int == 1'b0) | (phase_1_TREADY_int == 1'b0) | (phase_0_TREADY_int == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage0_iter21 = ((regslice_both_phases_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_3_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_2_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_1_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_0_data_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_block_state22_pp0_stage0_iter21_ignore_call24 = ((regslice_both_phases_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_3_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_2_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_1_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_0_data_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_block_state22_pp0_stage0_iter21_ignore_call42 = ((regslice_both_phases_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_3_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_2_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_1_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_0_data_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_block_state22_pp0_stage0_iter21_ignore_call60 = ((regslice_both_phases_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_3_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_2_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_1_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_0_data_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_block_state22_pp0_stage0_iter21_ignore_call78 = ((regslice_both_phases_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_3_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_2_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_1_data_V_U_apdone_blk == 1'b1) | (regslice_both_phase_0_data_V_U_apdone_blk == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call78 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call60 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call78 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_548 = ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_cart_V_0_reg_240 = 'bx;

assign ap_phi_reg_pp0_iter0_cart_V_1_reg_231 = 'bx;

assign ap_phi_reg_pp0_iter0_cart_V_2_reg_222 = 'bx;

assign ap_phi_reg_pp0_iter0_cart_V_3_reg_213 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge_reg_264 = 'bx;

assign ap_phi_reg_pp0_iter0_tmpphases_last_reg_277 = 'bx;

assign ap_phi_reg_pp0_iter0_tmpphases_user_V_reg_249 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign icmp_ln414_1_fu_579_p2 = ((and_ln414_1_fu_569_p4 == 16'd32769) ? 1'b1 : 1'b0);

assign icmp_ln414_2_fu_617_p2 = ((and_ln414_4_fu_607_p4 == 16'd32769) ? 1'b1 : 1'b0);

assign icmp_ln414_3_fu_659_p2 = ((and_ln414_5_fu_649_p4 == 16'd32769) ? 1'b1 : 1'b0);

assign icmp_ln414_4_fu_697_p2 = ((and_ln414_2_fu_687_p4 == 16'd32769) ? 1'b1 : 1'b0);

assign icmp_ln414_5_fu_739_p2 = ((and_ln414_6_fu_729_p4 == 16'd32769) ? 1'b1 : 1'b0);

assign icmp_ln414_6_fu_777_p2 = ((and_ln414_3_fu_767_p4 == 16'd32769) ? 1'b1 : 1'b0);

assign icmp_ln414_7_fu_819_p2 = ((and_ln414_7_fu_809_p4 == 16'd32769) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_537_p2 = ((and_ln_fu_527_p4 == 16'd32769) ? 1'b1 : 1'b0);

assign out_user_V_1_fu_491_p3 = {{instream_TUSER_int}, {1'd0}};

assign out_user_V_fu_363_p2 = (shl_ln_fu_355_p3 | 9'd1);

assign phase_0_TLAST_int = ap_phi_reg_pp0_iter20_tmpphases_last_reg_277;

assign phase_0_TVALID = regslice_both_phase_0_data_V_U_vld_out;

assign phase_1_TLAST_int = ap_phi_reg_pp0_iter20_tmpphases_last_reg_277;

assign phase_1_TVALID = regslice_both_phase_1_data_V_U_vld_out;

assign phase_2_TLAST_int = ap_phi_reg_pp0_iter20_tmpphases_last_reg_277;

assign phase_2_TVALID = regslice_both_phase_2_data_V_U_vld_out;

assign phase_3_TLAST_int = ap_phi_reg_pp0_iter20_tmpphases_last_reg_277;

assign phase_3_TVALID = regslice_both_phase_3_data_V_U_vld_out;

assign phases_TDATA_int = {{{{grp_cordic_base_fu_320_ap_return}, {grp_cordic_base_fu_313_ap_return}}, {grp_cordic_base_fu_306_ap_return}}, {grp_cordic_base_fu_299_ap_return}};

assign phases_TLAST_int = ap_phi_reg_pp0_iter20_tmpphases_last_reg_277;

assign phases_TVALID = regslice_both_phases_data_V_U_vld_out;

assign read_load_load_fu_327_p1 = ap_sig_allocacmp_read_load;

assign sext_ln708_1_fu_837_p1 = $signed(trunc_ln708_1_reg_1002);

assign sext_ln708_2_fu_849_p1 = $signed(trunc_ln708_2_reg_1012);

assign sext_ln708_3_fu_861_p1 = $signed(trunc_ln708_3_reg_1022);

assign sext_ln708_4_fu_873_p1 = $signed(trunc_ln708_4_reg_1032);

assign sext_ln708_5_fu_885_p1 = $signed(trunc_ln708_5_reg_1042);

assign sext_ln708_6_fu_897_p1 = $signed(trunc_ln708_6_reg_1052);

assign sext_ln708_7_fu_909_p1 = $signed(trunc_ln708_7_reg_1062);

assign sext_ln708_fu_825_p1 = $signed(trunc_ln_reg_992);

assign shl_ln_fu_355_p3 = {{in_user_V}, {1'd0}};

assign tmp_10_fu_595_p3 = ap_phi_reg_pp0_iter1_cart_V_1_reg_231[32'd15];

assign tmp_11_fu_633_p3 = ap_phi_reg_pp0_iter1_cart_V_1_reg_231[32'd31];

assign tmp_12_fu_641_p3 = ap_phi_reg_pp0_iter1_cart_V_1_reg_231[32'd16];

assign tmp_13_fu_675_p3 = ap_phi_reg_pp0_iter1_cart_V_2_reg_222[32'd15];

assign tmp_14_fu_713_p3 = ap_phi_reg_pp0_iter1_cart_V_2_reg_222[32'd31];

assign tmp_15_fu_721_p3 = ap_phi_reg_pp0_iter1_cart_V_2_reg_222[32'd16];

assign tmp_16_fu_755_p3 = ap_phi_reg_pp0_iter1_cart_V_3_reg_213[32'd15];

assign tmp_17_fu_793_p3 = ap_phi_reg_pp0_iter1_cart_V_3_reg_213[32'd31];

assign tmp_18_fu_801_p3 = ap_phi_reg_pp0_iter1_cart_V_3_reg_213[32'd16];

assign tmp_8_fu_553_p3 = ap_phi_reg_pp0_iter1_cart_V_0_reg_240[32'd31];

assign tmp_9_fu_561_p3 = ap_phi_reg_pp0_iter1_cart_V_0_reg_240[32'd16];

assign tmp_fu_515_p3 = ap_phi_reg_pp0_iter1_cart_V_0_reg_240[32'd15];

assign trunc_ln321_fu_381_p1 = instream_TDATA_int[31:0];

assign trunc_ln414_1_fu_603_p1 = ap_phi_reg_pp0_iter1_cart_V_1_reg_231[0:0];

assign trunc_ln414_2_fu_683_p1 = ap_phi_reg_pp0_iter1_cart_V_2_reg_222[0:0];

assign trunc_ln414_3_fu_763_p1 = ap_phi_reg_pp0_iter1_cart_V_3_reg_213[0:0];

assign trunc_ln414_fu_523_p1 = ap_phi_reg_pp0_iter1_cart_V_0_reg_240[0:0];

assign zext_ln415_1_fu_840_p1 = icmp_ln414_1_reg_1007;

assign zext_ln415_2_fu_876_p1 = icmp_ln414_4_reg_1037;

assign zext_ln415_3_fu_900_p1 = icmp_ln414_6_reg_1057;

assign zext_ln415_4_fu_852_p1 = icmp_ln414_2_reg_1017;

assign zext_ln415_5_fu_864_p1 = icmp_ln414_3_reg_1027;

assign zext_ln415_6_fu_888_p1 = icmp_ln414_5_reg_1047;

assign zext_ln415_7_fu_912_p1 = icmp_ln414_7_reg_1067;

assign zext_ln415_fu_828_p1 = icmp_ln414_reg_997;

endmodule //lowpass_to_phase
